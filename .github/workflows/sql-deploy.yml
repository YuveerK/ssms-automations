name: SSMS Database Automation

on:
  push:
    paths:
      - "DatabaseAdministration/SQLStatements/**.sql"
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Execute SQL Scripts with SQL Authentication
        shell: powershell
        run: |
          $server = "YUVEER"
          $username = "Auto_user"
          $password = "StrongPassword123"

          # Step 1: Run create_database.sql without -d AutoTest
          Write-Host "Executing script: create_database.sql..."
          sqlcmd -S $server -U $username -P $password -i "DatabaseAdministration/SQLStatements/create_database.sql"

          # Step 2: Run the remaining scripts with -d AutoTest
          $scripts = @(
              "create_table.sql",
              "insert_user_sp.sql",
              "insert_data.sql"
          )

          foreach ($script in $scripts) {
              Write-Host "Executing script: $script..."
              sqlcmd -S $server -U $username -P $password -d AutoTest -i "DatabaseAdministration/SQLStatements/$script"
          }

          Write-Host "‚úÖ Database setup complete!"

      - name: Download and Install ngrok if not available
        shell: powershell
        run: |
          $ngrokPath = "C:\ngrok\ngrok.exe"
          if (-Not (Test-Path $ngrokPath)) {
              Write-Host "üîΩ Downloading ngrok..."
              Invoke-WebRequest -Uri "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip" -OutFile ngrok.zip
              Expand-Archive -Path ngrok.zip -DestinationPath C:\ngrok -Force
              Remove-Item ngrok.zip -Force
              Write-Host "‚úÖ Ngrok installed successfully!"
          } else {
              Write-Host "‚úÖ Ngrok already installed."
          }

      - name: Start ngrok to expose SQL Server
        shell: powershell
        run: |
          $ngrokPath = "C:\ngrok\ngrok.exe"
          if (-Not (Test-Path $ngrokPath)) {
              Write-Host "‚ùå Ngrok not found! Please install it and update the path."
              exit 1
          }

          Write-Host "üöÄ Starting ngrok..."
          Start-Process -NoNewWindow -FilePath $ngrokPath -ArgumentList "tcp 1433"
          Start-Sleep -Seconds 5

          # Capture ngrok public URL
          $ngrokURL = & $ngrokPath tcp status | Select-String "tcp://" | ForEach-Object { $_.Matches.Value }
          Write-Host "üöÄ SQL Server is publicly accessible at: $ngrokURL"
